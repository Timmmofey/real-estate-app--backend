// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserService.Persistance.PostgreSQL;

#nullable disable

namespace UserService.Persistance.Migrations
{
    [DbContext(typeof(UserServicePostgreDbContext))]
    partial class UserServicePostgreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.CompanyProfileEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateOnly>("EstimatedAt")
                        .HasColumnType("date");

                    b.Property<string>("MainPhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegistrationAdress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Settlement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("СompanyRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("CompanyProfiles");
                });

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.PersonProfileEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MainPhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Settlement")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("PersonProfiles");
                });

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPermanantlyDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.CompanyProfileEntity", b =>
                {
                    b.HasOne("UserService.Persistance.PostgreSQL.Entities.UserEntity", "User")
                        .WithOne("CompanyProfile")
                        .HasForeignKey("UserService.Persistance.PostgreSQL.Entities.CompanyProfileEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.PersonProfileEntity", b =>
                {
                    b.HasOne("UserService.Persistance.PostgreSQL.Entities.UserEntity", "User")
                        .WithOne("PersonProfile")
                        .HasForeignKey("UserService.Persistance.PostgreSQL.Entities.PersonProfileEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserService.Persistance.PostgreSQL.Entities.UserEntity", b =>
                {
                    b.Navigation("CompanyProfile");

                    b.Navigation("PersonProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
